{
    "collab_server" : "",
    "contents" : "# ui2.R AFM\n\n\nshinyUI(fluidPage(\n  titlePanel(div(paste(gettext(\"MFA on the dataset \"),nomData),style=\"color:#6E6E6E\",align=\"center\"),windowTitle=\"MFAshiny\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      tags$head(\n        tags$style(\"body {background-color: #E1D3FB; }\"),\n        tags$style(type='text/css', \"#nb1 { height:50px; }\"),\n        tags$style(type='text/css', \"#nb2 { height:50px; }\"),\n        tags$style(type='text/css', \"#title1 { height: 25px; }\"),\n        tags$style(type='text/css', \"#title2 { height: 25px; }\"),\n        tags$style(type='text/css', \"#title3 { height: 25px; }\"),\n        tags$style(type='text/css', \"#title4 { height: 25px; }\"),\n        tags$style(type='text/css', \"#title5 { height: 25px; }\")\n      ),\n            br(),\n      div(align=\"center\",actionButton(\"Quit\", gettext(\"Quit the app\")))\n      ,width=3),\n    \n    mainPanel(\n      tabsetPanel(id = \"graph_sort\",\n                  tabPanel(gettext(\"Creation of groups\"),\n                           br(),\n                           checkboxInput(\"activemodif\",gettext(\"Create the groups\"),TRUE),\n                           conditionalPanel(\n                             condition=\"input.activemodif==true\",\n                             checkboxGroupInput(\"insets\",\"sets to compute\",\n                                                c(\"Assessor 1\"=1,\n                                                \"Assessor 2\"=2,\n                                                \"Assessor 3\"=3,\n                                                \"Assessor 4\"=4,\n                                                \"Assessor 5\"=5,\n                                    \"Assessor 6\"=6,\n                                     \"Assessor 7\"=7,\n                                     \"Assessor 8\"=8,\n                  \"Assessor 9\"=9,\n                  \"Assessor10\"=10))),\n                           textInput(\"inncomp\",h6(gettext(\"number of comps \")),NULL),\n                           checkboxInput(\"incenter\",gettext(\"need center?\"),TRUE),\n                           checkboxInput(\"inscale\",gettext(\"need scale?\"),TRUE)\n                           ),\n                  tabPanel(gettext(\"Graphs\"),\n                           radioButtons(\"pType\",\"Choose plot type:\",\n                                        list(\"eigenvalues\",\"common factor scores\",\"partial factor scores\",\"loadings\")),\n                           plotOutput('plot')),\n                  \n                  tabPanel(gettext(\"Values\"),\n                           br(),\n                           radioButtons(\"out\",gettext(\"Which outputs do you want?\"),\n                                        choices=list(gettext(\"Summary of outputs\"),gettext(\"Compromise factor scores\"),gettext(\"Partial factor scores\"),\n                                                     gettext(\"Contributions\")),inline=TRUE),\n                           conditionalPanel(\n                             #                               condition=\"input.out=='MFA'\",\n                             condition=paste(\"input.out=='\",gettext(\"Summary of outputs\"),\"'\",sep=''),\n                             verbatimTextOutput(\"summaryMFA\")\n                           ),\n                           conditionalPanel(\n                             #                               condition=\"input.out=='eig'\",\n                             condition=paste(\"input.out=='\",gettext(\"Compromise factor scores\"),\"'\",sep=''),\n                             verbatimTextOutput(\"compromise\")),\n                           conditionalPanel(\n                             condition=paste(\"input.out=='\",gettext(\"Partial factor scores\"),\"'\",sep=''),\n                             #                               condition=\"input.out=='ind'\",\n                             verbatimTextOutput(\"partial\")),\n                             \n                           conditionalPanel(\n                             condition=paste(\"input.out=='\",gettext(\"Contributions\"),\"'\",sep=''),\n                             #                               condition=\"input.out=='quantvar'\",\n                             radioButtons(\"out3\",\"What type of results?\",choices=list(gettext(\"Observation\"),gettext(\"Variables\"),gettext(\"Table\")),selected=gettext(\"Observation\"),inline=TRUE),\n                             conditionalPanel(\n                               condition=paste(\"input.out3=='\",gettext(\"Observation\"),\"'\",sep=''),\n                               #                                 condition=\"input.out3=='coord'\",\n                               div(align=\"center\",tableOutput(\"sorties11\"))),\n                             conditionalPanel(\n                               condition=paste(\"input.out3=='\",gettext(\"Variables\"),\"'\",sep=''),\n                               div(align=\"center\",tableOutput(\"sorties22\"))),\n                             conditionalPanel(\n                               condition=paste(\"input.out3=='\",gettext(\"Table\"),\"'\",sep=''),\n                               div(align=\"center\",tableOutput(\"sorties44\")))\n                           )\n\n                  ),\n                  tabPanel(gettext(\"Summary of dataset\"),\n                           br(),\n                           verbatimTextOutput(\"summary\"),\n                           selectInput(\"bam\",gettext(\"Graphs for\"),choices=list(IdChoices=VariableChoices),multiple=FALSE),\n                           plotOutput(\"histo\")),\n                  \n                  tabPanel(gettext(\"Data\"),\n                           br(),\n                           dataTableOutput(\"JDD\")\n                  )\n      )\n      ,width=9)\n  )\n))\n",
    "created" : 1480544601166.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2179571838",
    "id" : "D6BDE2B3",
    "lastKnownWriteTime" : 1480581416,
    "last_content_update" : 1480581416,
    "path" : "~/Desktop/MFA Shiny/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}